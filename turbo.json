{
  "$schema": "https://turbo.build/schema.json",
  "pipeline": {
    "//#barrels": {
      "inputs": [
        "*.{js,jsx,ts,tsx}",
        "{pkgs/query,discord-bot,query-api,test,ui}/**/{src,test}/**/*.{js,jsx,ts,tsx}",
        "!{pkgs/query,discord-bot,query-api,ui}/**/{build,dist,node_modules,.next}/**"
      ]
    },
    "//#format.biome": {
      "cache": false,
      "inputs": [
        "*.{cjs,js,jsx,ts,tsx,json,jsonc}",
        "{.github,pkgs,circom,discord-bot,query-api,ui}/**/*.{cjs,js,jsx,ts,tsx,json,jsonc}",
        "!{pkgs,circom,discord-bot,query-api,ui}/**/{build,dist,node_modules,.next}/**"
      ]
    },
    "format.cargo": {
      "cache": false,
      "inputs": [
        "pkgs/{merkle-tree-wasm,spartan-ecdsa-wasm,halo2-binary-merkle-tree,halo2-eth-membership}/src/**/*.rs"
      ]
    },
    "format.cargo.fix": {
      "cache": false,
      "inputs": [
        "pkgs/{merkle-tree-wasm,spartan-ecdsa-wasm,halo2-binary-merkle-tree,halo2-eth-membership}/src/**/*.rs"
      ]
    },
    "format.forge": {
      "cache": false,
      "inputs": ["contracts/{script,src,test}/**/*.sol"]
    },
    "format.forge.fix": {
      "cache": false,
      "inputs": ["contracts/{script,src,test}/**/*.sol"]
    },
    "//#format.biome.fix": {
      "cache": false,
      "inputs": [
        "*.{cjs,js,jsx,ts,tsx,json,jsonc}",
        "{.github,pkgs,circom,discord-bot,query-api,ui}/**/*.{cjs,js,jsx,ts,tsx,json,jsonc}",
        "!{pkgs,circom,discord-bot,query-api,ui}/**/{build,dist,node_modules,.next}/**"
      ]
    },
    "//#_knip": {
      "inputs": [
        "*.{cjs,js,jsx,ts,tsx}",
        "package.json",
        "{pkgs,circom,discord-bot,query-api,ui}/**/{package.json,*.{cjs,js,jsx,ts,tsx}}",
        "!{pkgs,circom,discord-bot,query-api,ui}/**/{build,dist,node_modules,.next}/**"
      ]
    },
    "lint.solhint": {
      "inputs": ["contracts/{script,src,test}/**/*.sol"]
    },
    "lint.solhint.fix": {
      "cache": false,
      "inputs": ["contracts/{script,src,test}/**/*.sol"]
    },
    "lint.cargo": {
      "cache": false,
      "inputs": [
        "pkgs/{merkle-tree-wasm,spartan-ecdsa-wasm,halo2-binary-merkle-tree,halo2-eth-membership}/src/**/*.rs"
      ]
    },
    "lint.cargo.fix": {
      "cache": false,
      "inputs": [
        "pkgs/{merkle-tree-wasm,spartan-ecdsa-wasm,halo2-binary-merkle-tree,halo2-eth-membership}/src/**/*.rs"
      ]
    },
    "//#lint.biome": {
      "inputs": [
        "*.{cjs,js,jsx,ts,tsx}",
        "{pkgs,circom,discord-bot,query-api,test,ui}/**/*.{cjs,js,jsx,ts,tsx}",
        "!{pkgs,circom,discord-bot,query-api,ui}/**/{build,dist,node_modules,.next}/**"
      ]
    },
    "//#lint.biome.fix": {
      "inputs": [
        "*.{cjs,js,jsx,ts,tsx}",
        "{pkgs,circom,discord-bot,query-api,test,ui}/**/*.{cjs,js,jsx,ts,tsx}",
        "!{pkgs,circom,discord-bot,query-api,ui}/**/{build,dist,node_modules,.next}/**"
      ]
    },
    "typecheck": {
      "inputs": [
        "*.{js,jsx,ts,tsx}",
        "{pkgs,circom,discord-bot,query-api,test,ui}/**/{src,test}/**/*.{js,jsx,ts,tsx}",
        "!{pkgs,circom,discord-bot,query-api,ui}/**/{build,dist,node_modules,.next}/**"
      ]
    },
    "build": {
      "dependsOn": ["^build", "build.graph"],
      "outputs": [
        "{pkgs,query-api,ui}/**/{build,dist}/**",
        "!{pkgs,query-api,ui}/**/node_modules/**"
      ]
    },
    "build.graph": {
      "outputs": ["src/repositories/graph-client/.graphclient/**"]
    },
    "//#_compile": {
      "outputs": [
        "pkgs/{merkle-tree-wasm,spartan-ecdsa-wasm}-wasm/dist/**",
        "pkgs/halo2-{binary-merkle-tree,eth-membership}/dist/**",
        "pkgs/halo2-{binary-merkle-tree,eth-membership}-worker/dist/**"
      ]
    },
    "//#test.jest": {
      "dependsOn": ["^build"],
      "inputs": [
        "{pkgs/{proof,query},circom,query-api}/{src,test}/**/*.{js,jsx,ts,tsx}"
      ]
    },
    "//#test.cargo": {
      "inputs": ["pkgs/**/*.rs"]
    },
    "_test": {
      "cache": false,
      "inputs": ["contracts/src/**/*.sol"]
    },
    "deploy": {
      "dependsOn": ["test"]
    },
    "compile": {
      "inputs": ["merkle-tree-wasm"],
      "outputs": ["merkle-tree-wasm"]
    }
  }
}
