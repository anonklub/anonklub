scripts:
  clean:
    script: 'rm -rf dist'
    hiddenFromHelp: true

  transpile:
    script: 'tsc'
    hiddenFromHelp: true

  lint:
    check:
      script: 'eslint . --ext .ts'
      hiddenFromHelp: true
    fix:
      script: 'eslint . --ext .ts --fix'
    ci:
      script: 'eslint . --ext .ts --quiet'
      hiddenFromHelp: true

  format:
    check:
      script: 'prettier "src" --check'
      hiddenFromHelp: true
    fix:
      script: 'prettier "src" --write'
      description: 'Format files'
    ci:
      script: 'prettier "src" --check --loglevel warn'
  prepare:
    script: "husky install"
    hiddenFromHelp: true

  test:
    default:
      script: 'jest'
      description: 'Run tests'
    watch:
      script: 'jest --watch'
      description: 'Run tests (watch)'
    ci:
      script: 'jest --silent  --reporters=jest-silent-reporter'
      hiddenFromHelp: true

  build:
    default:
      script: 'nps clean transpile'
      description: 'Build project'

  start:
    dev:
      script: 'NODE_ENV=development tsnd --rs --exit-child --clear --quiet --files -r tsconfig-paths/register ./src'
      hiddenFromHelp: true
    watch:
      script: 'NODE_ENV=development tsnd --respawn --rs --exit-child --clear --quiet --files -r tsconfig-paths/register ./src'
      description: 'Start project (dev, watch)'
    prod:
      script: 'NODE_ENV=production node -r module-alias/register ./dist'
      hiddenFromHelp: true
    hosted:
      script: 'NODE_ENV=hosted node -r module-alias/register ./dist'
      hiddenFromHelp: true
    default:
      script: 'nps build start.prod'
      description: 'Start project (prod)'

  ci:
    script: 'nps lint.ci format.ci test.ci'
    hiddenFromHelp: true

  graph:
    build:
      script: 'graphclient build  --dir src/lib/graph'
      description: 'Build the graph artifacts'
