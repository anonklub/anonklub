name: main-staging
on:
  # push trigger required to get coveralls monitoring of default branch
  # pull_request trigger required to get PR comments
  workflow_dispatch:
  pull_request:
    branches: [main, staging]
    paths:
      [
        'pkgs/**/*.{json,rs,ts}',
        'contracts/**/*.sol',
        'query-api/**/*.{js,json,ts,graphql}',
        'test/**/*.{js,ts}',
        'Cargo.lock',
        'pnpm-lock.yaml',
        '!**/*.md',
      ]
  push:
    branches: [main, staging]
    paths:
      [
        'pkgs/**/*.{json,rs,ts}',
        'contracts/**/*.sol',
        'test/**/*.{js,ts}',
        'query-api/**/*.{js,json,ts,graphql}',
        'Cargo.lock',
        'pnpm-lock.yaml',
        '!**/*.md',
      ]
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@nightly
      - uses: Swatinem/rust-cache@v2.7.3
      - uses: foundry-rs/foundry-toolchain@v1.2.0
        with:
          version: nightly
      - name: Install nextest
        uses: taiki-e/cache-cargo-install-action@v2.0.1
        with:
          tool: cargo-nextest
      - name: Install wasm-pack
        uses: taiki-e/cache-cargo-install-action@v2.0.1
        with:
          tool: wasm-pack
      - uses: actions/setup-node@v4
        with:
          node-version: 20.x
      - uses: pnpm/action-setup@v4.0.0
        id: pnpm-install
        with:
          version: 9.4.0
          run_install: false

      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      - uses: actions/cache@v4
        name: Setup pnpm cache
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: ${{ runner.os }}-pnpm-store-

      - name: Install node deps
        run: pnpm i --ignore-scripts --no-frozen-lockfile

      - name: Run tests
        env:
          DUNE_API_KEY: foo
          GRAPH_API_KEY: ${{ secrets.GRAPH_API_KEY }} # required for build step on which test depends on
        run: pnpm test

      - uses: coverallsapp/github-action@master
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
